#+LANGUAGE:  en
#+LINK_HOME: http://calebsmith.github.io/triclojure-cljs-howto/slides.html
#+LINK_UP: http://calebsmith.github.io/triclojure-cljs-howto/slides.html
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="/css/style.css" />
* ClojureScript Tooling HowTo

[[./images/cljs-white.png]]

* About Me
 Caleb Smith

[[./images/avatar.jpg]]

GitHub: calebsmith
 @CalebSmithNC

Work: Full-time Clojure at Transportation Insight

* Talk Outline:

 Philosophy

 Building Clojurescript

 Editor integration

 Development workflow (Hands-on)

* Philosophy
"Inventing on Principle" - Bret Victor [[https://vimeo.com/36579366]]

Common Lisp and Smalltalk

[[http://stackoverflow.com/questions/9448215/tools-to-support-live-coding-as-in-bret-victors-inventing-on-principle-talk]]

* Building ClojureScript

* ClojureScript only (no build system)
[[https://github.com/clojure/clojurescript/wiki/Quick-Start][ClojureScript Quick Start]] (recommended background, not tooling)


* Build Tools:
 Leiningen - [[https://github.com/emezeske/lein-cljsbuild][lein-cljsbuild]]

 Boot - [[https://github.com/adzerk-oss/boot-cljs][boot-cljs]]


* Figwheel

 [[https://github.com/bhauman/lein-figwheel][lein-figwheel]]

 Long running - Builds as source changes

 Updates browser via websocket

 Runs:

 1. stand-alone 
 2. Embedded in Ring handler
 3. In component or mount
 4. From an NRepl


* Figwheel Example ...
[[https://github.com/bhauman/figwheel-template][Figwheel Template]]

#+BEGIN_EXAMPLE
    lein new figwheel hi
    cd hi
    lein figwheel
#+END_EXAMPLE

 Open localhost:3449

 Ensure REPL works

 Examine project.clj and other boilerplate


* Editors

* Which?
 Vim

 *Emacs*

 *IntelliJ (Cursive)*

 LightTable

 Sublime Text

 Atom


* Spacemacs
 Pre-configured Emacs+Vim

 CIDER



* Features for Clojure(Script):
 (Re)load namespace

 Evaluate current form

 Evaluate current form and paste result

 Autocomplete

 Goto definition

 Hotload dependency (no REPL restarting)




* Toggling REPL vs. Dueling REPL's
 Cider >= 0.13 - Clojure and CLJS REPL

 Cider <= 0.12 - Same *or* Clojure REPL + toggling


* Emacs Figwheel setup:

[[https://github.com/bhauman/lein-figwheel/wiki/Using-the-Figwheel-REPL-within-NRepl]]

#+BEGIN_SRC elisp
  (setq cider-cljs-lein-repl
        "(do (require 'figwheel-sidecar.repl-api)
            (figwheel-sidecar.repl-api/start-figwheel!)
            (figwheel-sidecar.repl-api/cljs-repl))")
#+END_SRC

* Lein profile:

#+BEGIN_SRC clojure
  {:user {:dependencies [[alembic "0.3.2"]}}
#+END_SRC

* Example Project:

[[https://github.com/calebsmith/todocljs]]

* Questions?

* Thank You
